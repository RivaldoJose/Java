package br.com.rivaldo.confeitaria.controller;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.apache.tomcat.util.json.JSONParser;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.json.JsonParser;
import org.springframework.boot.json.JsonParserFactory;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.JsonStreamContext;
import com.fasterxml.jackson.core.io.JsonStringEncoder;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectWriter;

import br.com.rivaldo.confeitaria.domain.Categoria;
import br.com.rivaldo.confeitaria.ropository.CategoriaRepository;
import lombok.extern.java.Log;

@RestController
@RequestMapping("/categorias")
public class CategoriaController {
	@Autowired
	private CategoriaRepository categoriaRepository;
	
	@GetMapping
	public List<Categoria> listar() {
		return categoriaRepository.findAll();
	}
	
	@PostMapping
	public Categoria inserir(@RequestBody Categoria categoria) {
		return categoriaRepository.save(categoria);
	}
	
	@GetMapping("/{codigo}")
	public Categoria obterCategoria(@PathVariable Short codigo) {
		Optional<Categoria> categoria = categoriaRepository.findById(codigo);
		
		return categoria.get();
	}
	
	@DeleteMapping("/{codigo}")
	public String deletarCategoria(@PathVariable Short codigo) throws JsonProcessingException {
		Optional<Categoria> categoriaRemovida = categoriaRepository.findById(codigo);
		
		ObjectWriter ow = new ObjectMapper().writer().withDefaultPrettyPrinter();
		
		if (categoriaRemovida.isPresent()) {
			// Convert an object in a JSON
			String json = ow.writeValueAsString(categoriaRemovida.get());
			
			return json;
		}
		
		String a = "Error! Can not find a category with codigo " + codigo;

		ArrayList<String> resposta = new ArrayList<>();
		resposta.add(ow.writeValueAsString(a));

		return resposta.toString();
		//categoriaRepository.delete(categoriaRemovida.get());
		
		//categoriaRepository.
		
	}
}
